
/*Comentar as Linhas de CSS - Analise o arquivo style.css e faça comentários explicativos em cada linha de código. Descreva o propósito de cada estilo e como ele contribui para a aparência e o layout do slideshow.*/

* {
    box-sizing: border-box /* altera o modelo de caixa padrão do CSS, afetando como a largura e altura de um elemento são calculadas. */
}

.slideshow-container { /* caixa de slide*/
    max-width: 1000px; /* usada para definir a largura máxima de um elemento.*/
    position: relative; /* posiciona o elemento em relação a si mesmo*/
    margin: auto; /* serve para centralizar elementos horizontalmente dentro de um contêiner*/
}

.mySlides {
    display: none; /* display : none é usado para esconder um elemento html*/
}

.anterior,
.proximo {
    cursor: pointer; /* define o cursor para indicar que o elemento é clicável */
    position: absolute; /* posiciona qualquer elemento em relação ao seu contêiner pai*/
    top: 50%; /* posiciona um elemento a 50% da altuea do seu contêiner pai */
    width: auto; /*  define a largura de um elemento de acordo com seu conteúdo e o contexto em que está inserido */
    margin-top: -22px; /* aplica uma margem negativa ao topo de um elemento*/
    padding: 16px; /* adiciona espaçamento interno ao redor do conteúdo de um elemento*/
    color: white; 
    font-weight: bold; /* define a espessura do texto para negrito
    */
    font-size: 18px; /* define o tamanho da fonte em 18 pexels
    */
    transition: 0.6s ease; /* define uma transição suave para qualquer propriedade que mude,  função de tempo é ease, que começa lentamente, acelera no meio e desacelera no final */
    border-radius: 0 3px 3px 0; /* define um arredondamento das bordas do elemento, nesse caso, apenas os cantos superior direito e inferior direito são arredondados em 3 pixels */
    user-select: none; /* eita que o texto dentro do elemento seja selecionado pelo usuário */
}

.proximo {
    right: 0; /* define a posição do elemento em relação ao lado direito do seu contêiner pai */
    border-radius: 3px 0 0 3px; /* define um arredondamento nas bordas do elemento, nesse caso, apenas os cantos superior direito e inferior direito são arredondados */
}

.anterior:hover,
.proximo:hover {
    background-color: rgba(0, 0, 0, 0.8); /* define a cor de fundo com um valor de transparência de 80% */
}

.text {
    color: #f2f2f2; /* define a cor do texto como branco */
    font-size: 15px; /* define o tamanho da fonte em 15 pixels */
    padding: 8px 12px; /* define 8 pixels de preenchimento acima e abaixo, e 12 pixels de preenchimento nos lados esquerdo e direito */
    position: absolute; /* posiciona o elemento de forma absoluta em relação ao seu contêiner pai. */
    bottom: 8px; /* define uma distância de 8 pixels do fundo do contêiner pai */
    width: 100%; /* define a largura do elemento como 100% do contêiner pai */
    text-align: center; /* centraliza o texto dentro do elemento */
}

.numbertext {
    color: #f2f2f2; /* define a cor do texto para branco. */
    font-size: 12px; /* define o tamanho da fonte para 12 pixels. */
    padding: 8px 12px; /* define 8 pixels de preenchimento acima e abaixo e 12 pixels de preenchimento nos lados esquerdo e direito */
    position: absolute; /* posiciona qualquer elemento em relação ao seu contêiner pai */
    top: 0; /* alinha o elemento ao topo do contêiner pai */
}

.ponto {
    cursor: pointer; /* define o cursor para indicar que o elemento é clicável */
    height: 15px; /* define a altura do elemento para 15 pixels */
    width: 15px; /* define a largura do elemento para 15 pixels */
    margin: 0 2px; /* define 0 pixels de margem acima e abaixo e 2 pixels de margem nos lados esquerdo e direito. */
    background-color: #bbb; /* define a cor de fundo como cinza claro  */
    border-radius: 50%; /* define um raio de borda de 50%, criando um círculo */
    display: inline-block; /* exibe o elemento como um bloco inline. */
    transition: background-color 0.6s ease; /* aplica uma transição suave na mudança da cor de fundo ao longo de 0.6 segundos com uma função de tempo ease. */
}

.active,
.ponto:hover {
    background-color: #717171; /* define a cor de fundo do elemento como cinza */
}

.fade {
    animation-name: fade; /* especifica o nome da animação que será aplicada ao elemento, nesse caso, fade é o nome da animação. */
    animation-duration: 2.5s; /* define a duração da animação como 2.5 segundos */
}

@keyframes fade { /* permite criar animações especificando como um elemento deve ser animado ao longo do tempo, fade é o nome da animação definida */
    from { /* estado inicial da animação  */
        opacity: .2 /* define a opacidade do elemento como 0.2 no início da animação */
    }

    to { /* estado final da animação  */
        opacity: 1 /* define a opacidade do elemento como 1 ao final da animação */
    }
}